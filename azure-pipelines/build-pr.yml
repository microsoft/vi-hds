pr:
  branches:
    include:
    - '*'

name: PR-$(Date:yyyyMMdd)$(Rev:-r)

jobs:
  - job: Windows

    pool:
      vmImage: 'windows-2019'

    steps:
      - checkout: self

      - bash: |
          if [ $(Agent.OS) = 'Windows_NT' ]
          then subdir=Scripts
          else subdir=bin
          fi
          echo "Adding this directory to PATH: $CONDA/$subdir"
          echo "##vso[task.prependpath]$CONDA/$subdir"
        displayName: Add conda to PATH
        condition: succeeded()

      - bash: |
          conda install conda=4.8.5 -y
          conda --version
          conda list
        displayName: Install conda

      # Linux only; not required in Windows
      - bash: sudo chown -R $USER /usr/share/miniconda
        condition: and(succeeded(), eq( variables['Agent.OS'], 'Linux' ))
        displayName: Take ownership of conda installation
      
      - bash: |
          echo Creating conda environment in directory `pwd`
          # This command hangs when run in the build pipeline
          # conda update -n base -c defaults conda
          conda env create --file environment.yml --quiet 2>&1 | tee tmp.create.txt
          if grep -qwi "error:" tmp.create.txt
          then echo conda environment creation FAILED >&2
              exit 1
          fi
          rm tmp.create.txt
          source activate vi-hds
        condition: succeeded()
        displayName: Create conda environment
      
      - bash: |
          source activate vi-hds
          export PYTHONPATH=.
          pytest
        failOnStderr: false
        condition: succeededOrFailed()
        displayName: Run tests

      - task: CredScan@3
        condition: and(succeeded(), eq( variables['Agent.OS'], 'Windows_NT' ))

      - task: Semmle@1
        inputs:
          sourceCodeDirectory: '.'
          language: 'python'
          querySuite: 'Recommended'
          timeout: '1800'
          ram: '16384'
          addProjectDirToScanningExclusionList: true
          
      - task: PostAnalysis@1
        condition: and(succeeded(), eq( variables['Agent.OS'], 'Windows_NT' ))
        displayName: 'Post Analysis'
        inputs:
          CredScan: true

      - task: ComponentGovernanceComponentDetection@0
        condition: succeeded()
        inputs:
          scanType: 'Register'
          verbosity: 'Normal'
          alertWarningLevel: 'High'
          failOnAlert: true
          failOnStderr: true