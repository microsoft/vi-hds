# ------------------------------------
# Copyright (c) Microsoft Corporation.
# Licensed under the MIT license.
# ------------------------------------

data:
  devices: ['R33S175_PBadaiia']
  pretty_devices: ['Degrader']
  ## groups:
  ##   aR: [0]  # LuxR RBS This should be just one right??
  ##   aS: [0]  # LasR RBS This should be just one right??   
  ## default_devices:
  ##   aR: 0
  ##   aS: 0
  files: ['proc_degrader_RemovedDuplicates.csv']
  signals: ["OD", "mRFP1", "EYFP", "ECFP"]
  conditions: ["C6","C12","Ara"]
  separate_conditions: true
    
model: degrader_constant_precisions

params:
  learning_boundaries: [250,500]
  learning_rate: 0.01
  learning_gamma: 0.2
  n_hidden_decoder_precisions: 0

  constant:
    init_x: 0.002
    init_rfp: 0.0
    init_yfp: 0.0
    init_cfp: 0.0
    init_luxR: 0.0
    init_lasR: 0.0
    init_aiiA: 0.0
  
  # SHARED PARAMETERS 
  shared:
    auto_prec: { distribution: LogNormal, mu: -5.0, sigma: 2.0 }
    dfp_prec:  { distribution: LogNormal, mu: -2.0, sigma: 1.5 }
    init_prec: { distribution: LogNormal, mu: 6.0, sigma: 2.0 }

  global_conditioned:
    conditioning: { devices: true, treatments: false }
    
  global:    
    e76:    { distribution: LogNormal, mu: -3.0, sigma: 1.0}
    e81:    { distribution: LogNormal, mu: -3.0, sigma: 1.0}
    KGR_76: { distribution: LogNormal, mu: 2.0, sigma: 3.0}
    KGR_81: { distribution: LogNormal, mu: -2.0, sigma: 3.0}
    KGS_76: { distribution: LogNormal, mu: -2.0, sigma: 3.0}
    KGS_81: { distribution: LogNormal, mu: 2.0, sigma: 3.0}
    KR6:    { distribution: LogNormal, mu: -6.0, sigma: 3.0}
    KR12:   { distribution: LogNormal, mu: -12.0, sigma: 3.0}
    KS6:    { distribution: LogNormal, mu: -12.0, sigma: 3.0}
    KS12:   { distribution: LogNormal, mu: -6.0, sigma: 3.0}
    nR:     { distribution: LogNormal, mu: 0.0, sigma: 0.25}
    nS:     { distribution: LogNormal, mu: 0.0, sigma: 0.25}
    aYFP:   { distribution: LogNormal, mu: 0.0, sigma: 2.0}
    aCFP:   { distribution: LogNormal, mu: 0.0, sigma: 2.0}
    dR:     { distribution: LogNormal, mu: -2.0, sigma: 1.0}
    dS:     { distribution: LogNormal, mu: -2.0, sigma: 1.0}
    drfp:   { distribution: dfp_prec}
    dyfp:   { distribution: dfp_prec}
    dcfp:   { distribution: dfp_prec}
    a530:  { distribution: auto_prec}
    a480:  { distribution: auto_prec}

    aR    :   { distribution: LogNormal, mu: 0.0, sigma: 0.25}
    aS    :   { distribution: LogNormal, mu: 0.0, sigma: 0.25}
    aI    :   { distribution: LogNormal, mu: 0.0, sigma: 0.25}
    dA6   :   { distribution: LogNormal, mu: 0.0, sigma: 0.25}
    dA12  :   { distribution: LogNormal, mu: 0.0, sigma: 0.25}
    daiiA :   { distribution: LogNormal, mu: 0.0, sigma: 0.25}
    
    nA   : { distribution: LogNormal, mu: 0.0, sigma: 0.25}
    eA   : { distribution: LogNormal, mu: -3.0, sigma: 1.0}
    KAra : { distribution: LogNormal, mu: 0.0, sigma: 2.0}

    init_prec_x: { distribution: init_prec}
    init_prec_rfp: { distribution: init_prec}
    init_prec_yfp: { distribution: init_prec}
    init_prec_cfp: { distribution: init_prec}

  # LOCAL PARAMETERS:
  local:
    conditioning: { devices: true, treatments: False }

    r:    {distribution: LogNormal, mu: 0.0,   sigma: 0.25}
    K:    {distribution: LogNormal, mu: 0.0,   prec: 2.0}
    tlag: {distribution: LogNormal, mu: 0.0,   prec: 2.0}
    rc:   {distribution: LogNormal, mu: 0.0,   sigma: 2.0}  #blows up on 'prec', why?